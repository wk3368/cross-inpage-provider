{"version":3,"file":"static/chunks/pages/solana-dc595505b44ad9ac.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,U,q5CCCvB,IAAMC,EAAmC,IAMxBC,aAAaC,QAAQ,0BAA4B,IACzDC,MAAM,KAAKC,KAAI,SAACC,IACrBA,EAAOA,EAAOA,EAAKC,OAAS,MAE1BN,EAAQK,IAAQ,MAOf,IAAME,EAAgB,W,IAAGC,GAAM,uDAAgC,IAAtCA,OACNC,GAAAA,EAAAA,EAAAA,UAAS,IAA1BC,EAAiBD,EAAY,GAAvBE,EAAWF,EAAY,GAYpC,OATAG,EAAAA,EAAAA,YAAU,WAMR,OAHAC,EAAAA,EAAAA,MAAKhB,OAAOiB,SAAS,SAACC,GAAQJ,OAAAA,GAAQ,SAACK,GAAa,OAAM,EAAFA,GAAQ,OAAZ,CAAcD,UAAO,GAGlE,YAAWE,EAAAA,EAAAA,QAAOpB,OAAOiB,YAC/B,KAEG,UACHI,MAAG,CACFC,MAAO,CACLC,WAAY,QACZC,SAAU,WACVC,MAAO,QACPC,OAAQ,IACRC,SAAU,Q,qBAGXN,MAAG,CACFC,MAAO,CACLM,SAAU,GACVJ,SAAU,SACVK,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRT,WAAY,Q,oBAGbU,SAAM,CAACC,QAAS,WAAMpB,OAAAA,EAAQ,K,SAAK,UAAe,IAClD,CAAC,WAAY,eAAgB,eAAeP,KAAI,SAACC,GAChD,OAAM,UACH2B,QAAK,C,oBACHC,QAAK,CACJC,KAAK,WACLC,eAAgBnC,EAAQK,GACxB0B,QAAS,SAACK,G,IAIkBvC,EAE1BwC,EAAoB,EAFJ7B,EAFhBR,EAAQK,GAAQiC,QAAQF,EAAEG,OAAOC,SAEjC,IAAMH,EAA6C,QAAnC7B,EAAM,OAANA,QAAM,IAANA,EAAAA,EAAgB,OAANX,aAAAA,IAAAA,QAAe,QAAfA,EAAAA,OAAQ4C,eAAR5C,IAAAA,OAAAA,EAAAA,EAAiB6C,gBAAQ,IAAnClC,EAAAA,EAA6C,OAANX,aAAAA,IAAAA,YAAAA,EAAAA,OAAQ8C,WAExD,OAAPN,QAAAA,IAAAA,GAAoB,QAApBA,EAAAA,EAASO,mBAATP,IAAAA,GAA4B,QAAR,EAApBA,EAAsBQ,cAAtBR,IAA4B,GAAR,EAAUS,OAC5BC,OAAOC,QAAQhD,GACZI,KAAI,SAAQ,G,aAAN6C,EAAC,KAAS,OAAN,KAAWA,EAAI,QACzBC,OAAOZ,SACPa,KAAK,SAIb9C,IAlBSA,U,SAuBjB+C,EAAAA,QAAO,CAAC1C,KAAMA,EAAM2C,QAAQ,c,6IC7E7BC,GAAgBC,EAAAA,EAAAA,UAAQ,WAAM,2G,qDAClCC,KAAK,IAGQ,SAAS,IACtB,OAAM,UACHtC,MAAG,C,qBACDA,MAAG,CAACuC,UAAWC,IAAAA,U,oBACbC,EAAAA,QAAI,CAACC,KAAM,I,SAAK,iB,SAChBC,KAAE,C,SAAC,yB,SACHP,EAAa,Q,SAEf/C,EAAAA,EAAa,S,gBChBpBuD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,oBAAoB,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,sB","sources":["webpack://_N_E/?064a","webpack://_N_E/./components/LogsContainer.tsx","webpack://_N_E/./pages/solana/index.page.tsx","webpack://_N_E/./styles/Home.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/solana\",\n      function () {\n        return require(\"private-next-pages/solana/index.page.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/solana\"])\n      });\n    }\n  ","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { useEffect, useState } from 'react';\nimport { Console, Hook, Unhook } from 'console-feed';\nimport { JsBridgeBase } from '@onekeyfe/cross-inpage-provider-core';\n\nconst loggers: Record<string, boolean> = {};\n\nfunction loadLoggersConfig() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const config = localStorage.getItem('$$ONEKEY_DEBUG_LOGGER') || '';\n  config.split(',').map((name) => {\n    name = name ? name.trim() : '';\n    if (name) {\n      loggers[name] = true;\n    }\n  });\n}\n\nloadLoggersConfig();\n\nexport const LogsContainer = ({ bridge }: { bridge?: JsBridgeBase } = {}) => {\n  const [logs, setLogs] = useState([]);\n\n  // run once!\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Hook(window.console, (log) => setLogs((currLogs) => [...currLogs, log]), false);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return () => void Unhook(window.console);\n  }, []);\n\n  return (\n    <div\n      style={{\n        background: 'black',\n        position: 'relative',\n        color: 'white',\n        height: 300,\n        overflow: 'auto',\n      }}\n    >\n      <div\n        style={{\n          fontSize: 12,\n          position: 'sticky',\n          top: 0,\n          right: 0,\n          left: 0,\n          zIndex: 1,\n          background: '#333',\n        }}\n      >\n        <button onClick={() => setLogs([])}>Clear</button>{' '}\n        {['jsBridge', 'providerBase', 'extInjected'].map((name) => {\n          return (\n            <label key={name}>\n              <input\n                type=\"checkbox\"\n                defaultChecked={loggers[name]}\n                onClick={(e) => {\n                  // @ts-ignore\n                  loggers[name] = Boolean(e.target.checked);\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n                  const _bridge = bridge ?? window?.$onekey?.jsBridge ?? window?.hostBridge;\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                  _bridge?.debugLogger?._debug?.enable(\n                    Object.entries(loggers)\n                      .map(([k, v]) => (v ? k : null))\n                      .filter(Boolean)\n                      .join(','),\n                  );\n                }}\n              />\n              {name}\n            </label>\n          );\n        })}\n      </div>\n      <Console logs={logs} variant=\"dark\" />\n    </div>\n  );\n};\n","import dynamic from 'next/dynamic';\nimport styles from '../../styles/Home.module.css';\nimport Link from 'next/link';\nimport { LogsContainer } from '../../components/LogsContainer';\n\nconst SolanaExample = dynamic(() => import('../../components/solana/SolanaExample'), {\n  ssr: false,\n});\n\nexport default function () {\n  return (\n    <div>\n      <div className={styles.container}>\n        <Link href={'/'}>‚Üê Back</Link>\n        <h2>Solana Dapp Example</h2>\n        <SolanaExample />\n      </div>\n      <LogsContainer />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__bCOhY\",\"main\":\"Home_main__nLjiQ\",\"footer\":\"Home_footer____T7K\",\"title\":\"Home_title__T09hD\",\"description\":\"Home_description__41Owk\",\"code\":\"Home_code__suPER\",\"grid\":\"Home_grid__GxQ85\",\"card\":\"Home_card___LpL1\",\"logo\":\"Home_logo__27_tb\"};"],"names":["window","__NEXT_P","push","loggers","localStorage","getItem","split","map","name","trim","LogsContainer","bridge","useState","logs","setLogs","useEffect","Hook","console","log","currLogs","Unhook","div","style","background","position","color","height","overflow","fontSize","top","right","left","zIndex","button","onClick","label","input","type","defaultChecked","e","_bridge","Boolean","target","checked","$onekey","jsBridge","hostBridge","debugLogger","_debug","enable","Object","entries","k","filter","join","Console","variant","SolanaExample","dynamic","ssr","className","styles","Link","href","h2","module","exports"],"sourceRoot":""}
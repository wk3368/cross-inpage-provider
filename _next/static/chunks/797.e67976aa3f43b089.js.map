{"version":3,"file":"static/chunks/797.e67976aa3f43b089.js","mappings":"0LAae,SAASA,IAsBtB,OArBAC,EAAAA,EAAAA,YAAU,WACRC,OAAOC,YAAc,IAAIC,EAAAA,GAAe,CACtCC,YAAaC,OACbC,gBAAiB,OACjBC,cAAe,QACfC,QAAS,gBACTC,eAAAA,SAAeC,GACb,IAA2BA,EAAAA,EAAQC,KAA3BC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OAEhB,GADAC,QAAQC,IAAI,wBAAyB,CAAEH,OAAAA,EAAQC,OAAAA,IAChC,OAAXD,EACF,MAAO,oBAET,GAAe,UAAXA,EACF,MAAO,CAAEI,QAAS,qBAEpB,GAAe,UAAXJ,EACF,MAAM,IAAIK,MAAM,uCAIrB,KACG,SACHC,MAAG,C,SACC,CAAC,KAAM,QAAS,SAASC,KAAI,SAACP,EAAQQ,GACrC,OAAM,UACHC,SAAM,CAELC,QAAS,YAEFC,EAAAA,EAAAA,GACH,CACEX,OAAAA,EACAC,OAAQ,CAAC,CAAEO,MAAAA,KAEbnB,OAAOC,c,UAGZ,eACcU,EAAO,MAZfA,U,wYCrCZ,SAAeW,EAAW,EAE/BC,G,OAFoBD,EAAU,sB,SAAVA,I,OAAAA,EAAU,YAAzB,SAAQ,EACb,EACAC,G,IADEZ,EAAQC,EAIFY,E,wEAJNb,EAAF,EAAEA,OAAQC,EAAV,EAAUA,O,kBAImB,OAANW,QAAAA,IAAAA,OAAAA,EAAAA,EAAQE,QAAQ,CACnCC,MAAO,gBACPhB,KAAM,CACJC,OAAAA,EACAC,OAAAA,K,OAJEY,EAAS,EAAH,KAOZX,QAAQC,IAAI,cAAeH,EAAQ,WAASa,G,gDAE5CX,QAAQc,MAAM,+BAAgChB,EAAQ,WAAO,M,0DAdjC","sources":["webpack://_N_E/./components/iframe/IFrameExample.tsx","webpack://_N_E/./components/iframe/utils.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/restrict-plus-operands,@typescript-eslint/ban-ts-comment */\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react'\nimport { JsBridgeIframe } from '@onekeyfe/cross-inpage-provider-core'\nimport { IJsonRpcRequest } from '@onekeyfe/cross-inpage-provider-types'\nimport { sendMethod } from './utils'\n\ndeclare global {\n  interface Window {\n    frameBridge: JsBridgeIframe;\n    hostBridge: JsBridgeIframe;\n  }\n}\n\nexport default function IFrameExample() {\n  useEffect(() => {\n    window.frameBridge = new JsBridgeIframe({\n      remoteFrame: parent,\n      remoteFrameName: 'HOST',\n      selfFrameName: 'FRAME',\n      channel: 'onekey-js-sdk',\n      receiveHandler(payload) {\n        const { method, params } = payload.data as IJsonRpcRequest;\n        console.log('receiveHandler >>>>> ', { method, params });\n        if (method === 'hi') {\n          return 'from FRAME: 99999';\n        }\n        if (method === 'hello') {\n          return { message: 'from FRAME: 88888' };\n        }\n        if (method === 'error') {\n          throw new Error('from FRAME: something is wrong');\n        }\n      },\n    });\n  }, []);\n  return (\n    <div>\n        {['hi', 'hello', 'error'].map((method, index) => {\n          return (\n            <button\n              key={method}\n              onClick={() => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                void sendMethod(\n                  {\n                    method,\n                    params: [{ index }],\n                  },\n                  window.frameBridge,\n                );\n              }}\n            >\n              sendToHost ({method})\n            </button>\n          );\n        })}\n    </div>\n  );\n}\n","import { JsBridgeIframe } from '@onekeyfe/cross-inpage-provider-core';\nimport { IJsonRpcRequest } from '@onekeyfe/cross-inpage-provider-types';\n\nexport async function sendMethod(\n  { method, params }: IJsonRpcRequest,\n  bridge?: JsBridgeIframe,\n): Promise<void> {\n  try {\n    const result = await bridge?.request({\n      scope: '$hardware_sdk',\n      data: {\n        method,\n        params,\n      },\n    });\n    console.log('result >>>>', method, ' --> ', result);\n  } catch (e) {\n    console.error('bridge send ERROR response: ', method, ' --> ', e);\n  }\n}\n"],"names":["IFrameExample","useEffect","window","frameBridge","JsBridgeIframe","remoteFrame","parent","remoteFrameName","selfFrameName","channel","receiveHandler","payload","data","method","params","console","log","message","Error","div","map","index","button","onClick","sendMethod","bridge","result","request","scope","error"],"sourceRoot":""}